pipeline {
    agent any
    tools {
        maven 'maven'
    }
    environment {
        SONARQUBE_ENV = 'sonarqube'
        DOCKER_IMAGE = 'wineapp-image'
    }
    stages {
        stage('Checkout Code') {
            steps {
                git branch: 'main', url: 'https://github.com/NILAYRAVAL/wineApp.git'
            }
        }
        stage('Build') {
            steps {
                sh 'mvn clean package'
            }
        }
        stage('Test') {
            steps {
                sh 'mvn test'
            }
        }
        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv("${SONARQUBE_ENV}") {
                    sh '''
                        mvn sonar:sonar \
                        -Dsonar.projectKey=wine-manager-uniqueKey \
                        -Dsonar.projectName=WineApp \
                        -Dsonar.java.binaries=target/classes
                    '''
                }
            }
        }
        stage('Docker Build & Run') {
            steps {
                sh '''
                    docker build -t $DOCKER_IMAGE .
                    docker run -d -p 8081:8080 --name wineapp-container $DOCKER_IMAGE
                '''
            }
        }
    }
    post {
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}
